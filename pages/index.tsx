import { useCallback, MouseEvent, useState, useEffect } from "react";
import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import {
  Container,
  Button,
  Grid,
  Card,
  Row,
  Text,
  Switch,
  SwitchEvent,
  Modal,
} from "@nextui-org/react";
import {
  CircularInput,
  CircularTrack,
  CircularProgress,
  CircularThumb,
} from "react-circular-input";

import Humidity from "assets/humidity.png";
import Temperature from "assets/temperature.png";
import WateringCan from "assets/watering-can.png";

import styles from "styles/Home.module.css";

const Home: NextPage = () => {
  const [isHumidityModalOpen, setIsHumidityModalOpen] = useState(false);
  const [isTemperatureModalOpen, setIsTemperatureModalOpen] = useState(false);

  const [humidity, setHumidity] = useState(0);
  const [temperature, setTemperature] = useState(0);

  const onHumidityCheckChange = useCallback((event: SwitchEvent) => {
    console.log("Humidity check:", event.target.checked);
  }, []);

  const onTemperatureCheckChange = useCallback((event: SwitchEvent) => {
    console.log("Temperature check:", event.target.checked);
  }, []);

  const onSwitchClick = useCallback((event: MouseEvent) => {
    event.stopPropagation();
  }, []);

  const closeHumidityModal = useCallback(() => {
    setIsHumidityModalOpen(false);
  }, []);

  const openHumidityModal = useCallback(() => {
    setIsHumidityModalOpen(true);
  }, []);

  const closeTemperatureModal = useCallback(() => {
    setIsTemperatureModalOpen(false);
  }, []);

  const openTemperatureModal = useCallback(() => {
    setIsTemperatureModalOpen(true);
  }, []);

  const onHumiditySubmit = useCallback(() => {
    fetch("http://localhost:8080/configure-humidity", {
      method: "POST",
      body: JSON.stringify({
        humidity: Math.round(humidity * 100).toString(),
      }),
      headers: {
        ["Content-Type"]: "application/json",
      },
    })
      .then((response) => response.json())
      .then(console.log)
      .catch(console.error);

    closeHumidityModal();
  }, [closeHumidityModal, humidity]);

  const onTemperatureSubmit = useCallback(() => {
    fetch("http://localhost:8080/configure-temperature", {
      method: "POST",
      body: JSON.stringify({
        temperature: Math.round(temperature * 100).toString(),
      }),
      headers: {
        ["Content-Type"]: "application/json",
      },
    })
      .then((response) => response.json())
      .then(console.log)
      .catch(console.error);

    closeTemperatureModal();
  }, [closeTemperatureModal, temperature]);

  const onWaterPlantClick = useCallback(() => {
    fetch("http://localhost:8080/irrigate", {
      method: "POST",
    })
      .then((response) => response.json())
      .then(console.log)
      .catch(console.error);
  }, []);

  useEffect(() => {
    const getData = () => {
      fetch("http://localhost:8080/actualData")
        .then((response) => response.json())
        .then((formattedResponse) =>
          console.log({
            temperature: formattedResponse[0],
            humidity: formattedResponse[1],
          })
        )
        .catch(console.error);
    };

    getData();
  }, []);

  useEffect(() => {
    const getData = () => {
      fetch("http://localhost:8080/time")
        .then((response) => response.json())
        .then((formattedResponse) => console.log({ formattedResponse }))
        .catch(console.error);
    };

    getData();
  }, []);

  return (
    <div className={styles.container}>
      <Head>
        <title>GreenHouse</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <Grid.Container gap={2} justify="center" css={{ marginBlock: "2rem" }}>
          <Grid xs={3} direction="column" justify="center">
            <Text
              b
              css={{
                textAlign: "center",
              }}
            >
              34 %
            </Text>
            <Text
              css={{
                textAlign: "center",
              }}
            >
              Humidity
            </Text>
          </Grid>
          <Grid xs={3} direction="column" justify="center">
            <Text
              b
              css={{
                textAlign: "center",
              }}
            >
              34 °C
            </Text>
            <Text
              css={{
                textAlign: "center",
              }}
            >
              Temperature
            </Text>
          </Grid>
          <Grid xs={3} direction="column" justify="center">
            <Text
              b
              css={{
                textAlign: "center",
              }}
            >
              5 mins
            </Text>
            <Text
              css={{
                textAlign: "center",
              }}
            >
              Last time watered
            </Text>
          </Grid>
        </Grid.Container>

        <h1 className={styles.title}>
          Welcome to <span>GreenHouse!</span>
        </h1>

        <Button
          size="xl"
          bordered
          color="primary"
          rounded
          icon={
            <Image
              src={WateringCan}
              alt="Water your plant"
              height={25}
              width={25}
            />
          }
          onPress={onWaterPlantClick}
        >
          Water your plant
        </Button>
        <Grid.Container gap={2} justify="center" css={{ marginTop: "1rem" }}>
          <Grid xs={6} sm={3}>
            <Card isPressable onClick={openHumidityModal}>
              <Card.Body>
                <Row justify="space-between" align="center">
                  <Container
                    display="flex"
                    wrap="nowrap"
                    gap={1}
                    alignItems="center"
                  >
                    <Image
                      src={Humidity}
                      alt="Humidity"
                      height={30}
                      width={30}
                    />
                    <Text b>Humidity</Text>
                  </Container>
                  <Container display="flex" justify="flex-end">
                    <Switch
                      color="success"
                      checked={true}
                      onChange={onHumidityCheckChange}
                      onClick={onSwitchClick}
                    />
                  </Container>
                </Row>
              </Card.Body>
            </Card>
          </Grid>
          <Grid xs={6} sm={3}>
            <Card isPressable onClick={openTemperatureModal}>
              <Card.Body>
                <Row justify="space-between" align="center">
                  <Container
                    display="flex"
                    wrap="nowrap"
                    gap={1}
                    alignItems="center"
                  >
                    <Image
                      src={Temperature}
                      alt="temperature"
                      height={30}
                      width={30}
                    />
                    <Text b>Temperature</Text>
                  </Container>
                  <Container
                    display="flex"
                    justify="flex-end"
                    css={{ width: "10rem" }}
                  >
                    <Switch
                      color="success"
                      checked={true}
                      onChange={onTemperatureCheckChange}
                      onClick={onSwitchClick}
                    />
                  </Container>
                </Row>
              </Card.Body>
            </Card>
          </Grid>
        </Grid.Container>
        <Modal
          closeButton
          blur
          aria-labelledby="modal-title"
          open={isHumidityModalOpen}
          onClose={closeHumidityModal}
        >
          <Modal.Header>
            <Text h3>Configure Humidity</Text>
          </Modal.Header>
          <Modal.Body>
            <Container
              display="flex"
              alignItems="center"
              justify="center"
              css={{ p: "1rem" }}
            >
              <CircularInput value={humidity} onChange={setHumidity}>
                <CircularTrack />
                <CircularProgress />
                <CircularThumb />
                <text
                  x={100}
                  y={100}
                  textAnchor="middle"
                  dy="0.3em"
                  fontWeight="bold"
                  fontSize={34}
                >
                  {Math.round(humidity * 100)}%
                </text>
              </CircularInput>
            </Container>
          </Modal.Body>
          <Modal.Footer justify="center">
            <Button color="primary" onPress={onHumiditySubmit}>
              Save
            </Button>
          </Modal.Footer>
        </Modal>
        <Modal
          closeButton
          blur
          aria-labelledby="modal-title"
          open={isTemperatureModalOpen}
          onClose={closeTemperatureModal}
        >
          <Modal.Header>
            <Text h3>Configure Temperature</Text>
          </Modal.Header>
          <Modal.Body>
            <Container
              display="flex"
              alignItems="center"
              justify="center"
              css={{ p: "1rem" }}
            >
              <CircularInput value={temperature} onChange={setTemperature}>
                <CircularTrack />
                <CircularProgress />
                <CircularThumb />
                <text
                  x={100}
                  y={100}
                  textAnchor="middle"
                  dy="0.3em"
                  fontWeight="bold"
                  fontSize={34}
                >
                  {Math.round(temperature * 100)}°C
                </text>
              </CircularInput>
            </Container>
          </Modal.Body>
          <Modal.Footer justify="center">
            <Button color="primary" onPress={onTemperatureSubmit}>
              Save
            </Button>
          </Modal.Footer>
        </Modal>
      </main>
    </div>
  );
};

export default Home;
